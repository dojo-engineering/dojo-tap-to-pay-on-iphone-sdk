// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name DojoTapToPayOniPhoneSDK
import Combine
@_exported import DojoTapToPayOniPhoneSDK
import Foundation
import ProximityReader
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public enum DojoTerminalStatus : Swift.String, Swift.Decodable {
  case pending
  case provisioning
  case provisioned
  case operational
  case failed
  case unknown
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@available(iOS 16.7, *)
public struct DojoTapToPayOniPhonePaymentResult {
}
public struct DojoTapToPayOniPhonePaymentResultData {
}
@available(iOS 16.7, *)
public enum DojoTapToPayOniPhonePaymentStatus : Swift.Int {
  case success
  case decline
  case alreadyPaid
  case canceled
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@available(iOS 16.7, *)
public class DojoTapToPayOniPhone {
  public init(env: DojoTapToPayOniPhoneSDK.APIEnv = .prod)
  #if compiler(>=5.3) && $AsyncAwait
  public func activateTerminal(_ secret: Swift.String) async throws -> DojoTapToPayOniPhoneSDK.DojoTerminalStatus
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public func isAccountLinked(_ secret: Swift.String) async throws -> Swift.Bool
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public func linkAccount(_ secret: Swift.String) async throws
  #endif
  public func deactiveTerminal()
  #if compiler(>=5.3) && $AsyncAwait
  public func getTerminalActivationStatus(notifyWhenOperational: Swift.Bool = false, secret: Swift.String) async throws -> DojoTapToPayOniPhoneSDK.DojoTerminalStatus
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public func startPayment(paymentIntentId: Swift.String, secret: Swift.String) async throws -> DojoTapToPayOniPhoneSDK.DojoTapToPayOniPhonePaymentResult
  #endif
  @objc deinit
}
public enum DojoSDKErrorCode : Swift.Int {
  case internalError
  case networkError
  case secretNotProvided
  case secretExpired
  case paymentIntentNotProvided
  case terminalNotOperational
  case accountNotLinked
  case cardReaderError
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
public enum APIEnv : Swift.String {
  case staging
  case prod
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
extension DojoTapToPayOniPhoneSDK.DojoTerminalStatus : Swift.Equatable {}
extension DojoTapToPayOniPhoneSDK.DojoTerminalStatus : Swift.Hashable {}
extension DojoTapToPayOniPhoneSDK.DojoTerminalStatus : Swift.RawRepresentable {}
@available(iOS 16.7, *)
extension DojoTapToPayOniPhoneSDK.DojoTapToPayOniPhonePaymentStatus : Swift.Equatable {}
@available(iOS 16.7, *)
extension DojoTapToPayOniPhoneSDK.DojoTapToPayOniPhonePaymentStatus : Swift.Hashable {}
@available(iOS 16.7, *)
extension DojoTapToPayOniPhoneSDK.DojoTapToPayOniPhonePaymentStatus : Swift.RawRepresentable {}
extension DojoTapToPayOniPhoneSDK.DojoSDKErrorCode : Swift.Equatable {}
extension DojoTapToPayOniPhoneSDK.DojoSDKErrorCode : Swift.Hashable {}
extension DojoTapToPayOniPhoneSDK.DojoSDKErrorCode : Swift.RawRepresentable {}
extension DojoTapToPayOniPhoneSDK.APIEnv : Swift.Equatable {}
extension DojoTapToPayOniPhoneSDK.APIEnv : Swift.Hashable {}
extension DojoTapToPayOniPhoneSDK.APIEnv : Swift.RawRepresentable {}
